#!/bin/zsh

wlcam_bin="wlcam-ipu3"
vcw_bin="v4l2-wlctl"
savedir="$HOME/pictures/camera"
if [[ $debug == 1 ]]; then
    wlcam_bin="$HOME/build/wlcam/debug/src/ipu3/$wlcam_bin"
    vcw_bin="$HOME/build/v4l2-wlctl/debug/$vcw_bin"
    savedir="/tmp"
fi

find_devnode_by_model() {
    cd /sys/bus/media/devices
    for dir in *; do
        read model < $dir/model
        if [[ $model == $1 ]]; then
            echo $dir
            return 0
        fi
    done
    echo "device $1 not found"
    return 1
}

wlcam_args=(
    --imgu /dev/$(find_devnode_by_model "ipu3-imgu")
    --cio2 /dev/$(find_devnode_by_model "Intel IPU3 CIO2")
    --cio2-entity "ipu3-csi2 $csi_num"
    --imgu-entity "ipu3-imgu 0"
    --sensor-mbus-code 12295
    --sensor-width $sensor_width
    --sensor-height $sensor_height
    --width $width
    --height $height
    -o $savedir
    $wlcam_args
)

stdout_handler() {
    while true; do
        if ! read line; then
            return 1
        fi
        echo "$line"
        if [[ $line == "ipu3"* ]]; then
            line=($(echo $line))
            if [[ ${line[2]} == "sensor" ]]; then
                sensor_dev=${line[3]}
            elif [[ ${line[2]} == "lens" ]]; then
                lens_dev=${line[3]}
            fi
        elif [[ $line == "ready" ]]; then
            break
        fi
    done

    ${vcw_bin}-oneshot $sensor_dev $sensor_params
    on_ready

    while true; do
        if ! read line; then
            return 0
        fi
        echo "$line"
    done
}

open_wlcam() {
    killall -s USR1 wvkbd
    swaymsg "workspace 8; splith;"

    $wlcam_bin ${wlcam_args[@]} | stdout_handler

    swaymsg "workspace 1"
    killall v4l2-wlctl
}
